install.packages(c("ggplot2", "shiny"))
))
))
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Hello Shiny!"),
# Sidebar with a slider input for the number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Hello Shiny!"),
# Sidebar with a slider input for the number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Hello Shiny!"),
# Sidebar with a slider input for the number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
mainPanel(
plotOutput("distPlot")
)
)
))
run("my_app")
library shiny
library (shiny)
run("my_app")
runApp("my_app")
runExample("01_hello")
library(shiny)
shinyUI(fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel( "sidebar panel"),
mainPanel("main panel")
)
))
library(shiny)
shinyUI(fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel( "sidebar panel"),
mainPanel("main panel")
)
))
library(shiny)
shinyUI(fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel( "sidebar panel"),
mainPanel("main panel")
)
))
ls
run_App("Stats-Assignment")
runApp("Stats-Assignment")
library (shiny)
runApp("Stats-Assignment")
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
install.packages("XLConnect")
install.packages("XLConnect")
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
install.packages("XLConnect")
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
shiny::runApp('GitHub/Stats-Assignment')
run(test)
run("test")
build
library(XLConnect)
wb <- loadWorkbook("WorldCupPlayerInfo.xlsx",create = F)
data = readWorksheet(wb,sheet = 1)
Library(XLConnect)
library(XLConnect)
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
help(barplot)
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp('WorldCup')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
clear
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
subset02 <- subset(data_prev, data_prev$year=="2002")
View(subset02)
View(subset02)
subset02 <- subset(data_prev, data_prev$Year=="2002")
subset02 <- subset(data_prev, data_prev$Year=="2002")
View(subset02)
View(subset02)
View(data_prev)
shiny::runApp()
View(data_prev)
